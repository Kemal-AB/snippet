[{"key":"ATutorialSampleCharacter - BeginTouch","value":"void ATutorialSampleCharacter::BeginTouch(const ETouchIndex::Type FingerIndex, const FVector Location)\n{\n    if (TouchItem.bIsPressed == true)\n    {\n        return;\n    }\n    if ((FingerIndex == TouchItem.FingerIndex) && (TouchItem.bMoved == false))\n    {\n        OnPrimaryAction();\n    }\n    TouchItem.bIsPressed = true;\n    TouchItem.FingerIndex = FingerIndex;\n    TouchItem.Location = Location;\n    TouchItem.bMoved = false;\n}"},{"key":"ATutorialSampleCharacter - EndTouch","value":"void ATutorialSampleCharacter::EndTouch(const ETouchIndex::Type FingerIndex, const FVector Location)\n{\n    if (TouchItem.bIsPressed == false)\n    {\n        return;\n    }\n    TouchItem.bIsPressed = false;\n}"},{"key":"ATutorialSampleCharacter - MoveForward","value":"void ATutorialSampleCharacter::MoveForward(float Value)\n{\n    if (Value != 0.0f)\n    {\n        \/\/ add movement in that direction\n        AddMovementInput(GetActorForwardVector(), Value);\n    }\n}"},{"key":"ATutorialSampleCharacter - MoveRight","value":"void ATutorialSampleCharacter::MoveRight(float Value)\n{\n    if (Value != 0.0f)\n    {\n        \/\/ add movement in that direction\n        AddMovementInput(GetActorRightVector(), Value);\n    }\n}"},{"key":"UTP_WeaponComponent - EndPlay","value":"void UTP_WeaponComponent::EndPlay(const EEndPlayReason::Type EndPlayReason)\n{\n    if(Character != nullptr)\n    {\n        \/\/ Unregister from the OnUseItem Event\n        Character->OnUseItem.RemoveDynamic(this, &UTP_WeaponComponent::Fire);\n    }\n}"},{"key":"UTP_WeaponComponent - AttachWeapon","value":"void UTP_WeaponComponent::AttachWeapon(ATutorialSampleCharacter* TargetCharacter)\n{\n    Character = TargetCharacter;\n    if(Character != nullptr)\n    {\n        \/\/ Attach the weapon to the First Person Character\n        FAttachmentTransformRules AttachmentRules(EAttachmentRule::SnapToTarget, true);\n        GetOwner()->AttachToComponent(Character->GetMesh1P(),AttachmentRules, FName(TEXT(\"GripPoint\")));\n \n        \/\/ Register so that Fire is called every time the character tries to use the item being held\n        Character->OnUseItem.AddDynamic(this, &UTP_WeaponComponent::Fire);\n    }\n}"},{"key":"ATutorialSampleCharacter - BeginPlay","value":"void ATutorialSampleCharacter::BeginPlay()\n{\n    \/\/ add comment\n    \/\/ Call the base class  \n    Super::BeginPlay();\n \n}"},{"key":"ATutorialSampleCharacter - EnableTouchscreenMovement","value":"if (FPlatformMisc::SupportsTouchInput() || GetDefault<UInputSettings>()->bUseMouseForTouch)\n    {\n        PlayerInputComponent->BindTouch(EInputEvent::IE_Pressed, this, &ATutorialSampleCharacter::BeginTouch);\n        PlayerInputComponent->BindTouch(EInputEvent::IE_Released, this, &ATutorialSampleCharacter::EndTouch);\n \n        return true;\n    }\n    \n    return false;"}]